openapi: "3.0.3"
info:
  title: Recipe API
  version: "1.0"
servers:
  - url: http://127.0.0.1:5000
tags:
  - name: Recipes
    description: Operations related to recipes
  - name: Favorite Recipes
    description: Operations related to favorite recipes
  - name: Fridge
    description: Operations related to fridge items
  - name: Users
    description: Operations related to users
paths:
  /filter_ingredients:
    post:
      tags:
        - Recipes
      summary: Filter data to recipes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ingredients:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  filtered_ingredients:
                    type: string
                    example: "Tomaten, Salat"

  /get_recipes:
    post:
      tags:
        - Recipes
      summary: Get recipes from ingredients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ingredients:
                  type: array
                  items:
                    type: string
                cuisine:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  recipes:
                    type: object
                    properties:
                      rezepte:
                        type: array
                        items:
                          type: object
                          properties:
                            allergies:
                              type: array
                              items:
                                type: string
                            healthy:
                              type: boolean
                            hotOrCold:
                              type: string
                            name:
                              type: string
                            howToCook:
                              type: string
                            ingredients:
                              type: array
                              items:
                                type: string

  /get_additional_ingredients:
    post:
      tags:
        - Recipes
      summary: Get additional ingredients for recipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recipe:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  additional_ingredients:
                    type: array
                    items:
                      type: string

  /analyze_image:
    post:
      tags:
        - Recipes
      summary: Analyze image to get ingredients
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ingredients:
                    type: string
                    example: "Knorr Fixeinbrenn, Erdapfel speckig, Eierknopfle, High Protein Quark, Philadelphia Kr√©uter"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /generate_detailed_recipe:
    post:
      tags:
        - Recipes
      summary: Generate detailed recipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                ingredients:
                  type: array
                  items:
                    type: string
                howToCook:
                  type: string
                allergies:
                  type: array
                  items:
                    type: string
                healthy:
                  type: boolean
                hotOrCold:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  detailed_recipe:
                    type: object
                    properties:
                      name:
                        type: string
                      ingredients:
                        type: array
                        items:
                          type: string
                      detailed_steps:
                        type: array
                        items:
                          type: string
                      allergies:
                        type: array
                        items:
                          type: string
                      healthy:
                        type: boolean
                      hotOrCold:
                        type: string
  /fav-recipes/add:
    post:
      tags:
        - Favorite Recipes
      summary: Add a new recipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                ingredients:
                  type: array
                  items:
                    type: string
                howToCook:
                  type: string
                allergies:
                  type: array
                  items:
                    type: string
                healthy:
                  type: boolean
                hotOrCold:
                  type: string
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /fav-recipes:
    get:
      tags:
        - Favorite Recipes
      summary: Get all favorite recipes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    ingredients:
                      type: array
                      items:
                        type: string
                    howToCook:
                      type: string
                    allergies:
                      type: array
                      items:
                        type: string
                    healthy:
                      type: boolean
                    hotOrCold:
                      type: string

  /fav-recipes/{id}:
    get:
      tags:
        - Favorite Recipes
      summary: Get a favorite recipe by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  ingredients:
                    type: array
                    items:
                      type: string
                  howToCook:
                    type: string
                  allergies:
                    type: array
                    items:
                      type: string
                  healthy:
                    type: boolean
                  hotOrCold:
                    type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /fav-recipes/remove/{id}:
    delete:
      tags:
        - Favorite Recipes
      summary: Delete a favorite recipe by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /fridge/items:
    get:
      tags:
        - Fridge
      summary: Get all items in the fridge
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    quantity:
                      type: integer
                    expiration_date:
                      type: string
                      format: date
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /fridge/items/add:
    post:
      tags:
        - Fridge
      summary: Add a new item to the fridge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                quantity:
                  type: integer
                expiration_date:
                  type: string
                  format: date
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /fridge/items/{id}:
    get:
      tags:
        - Fridge
      summary: Get a fridge item by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  quantity:
                    type: integer
                  expiration_date:
                    type: string
                    format: date
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /fridge/items/remove/{id}:
    delete:
      tags:
        - Fridge
      summary: Delete a fridge item by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /fridge/items/update/{id}:
    put:
      tags:
        - Fridge
      summary: Update a fridge item by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                quantity:
                  type: integer
                expiration_date:
                  type: string
                  format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /users:
    get:
      tags:
        - Users
      summary: Get all users
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    google_id:
                      type: string
                    email:
                      type: string
                    name:
                      type: string
                    profile_picture:
                      type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  google_id:
                    type: string
                  email:
                    type: string
                  name:
                    type: string
                  profile_picture:
                    type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /users/add:
    post:
      tags:
        - Users
      summary: Add a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                google_id:
                  type: string
                email:
                  type: string
                name:
                  type: string
                profile_picture:
                  type: string
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /users/remove/{id}:
    delete:
      tags:
        - Users
      summary: Delete a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /users/{id}/update/nutriscore:
    post:
      tags:
        - Users
      summary: Update nutriscore by user ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nutriscore:
                  type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /users/{id}/get/nutriscore:
    get:
      tags:
        - Users
      summary: Get nutriscore by user ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  nutriscore:
                    type: integer
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string